#!/bin/bash

. include/bootstrap-root

OPAD=$(pwd)

log "Installing Node.js"

cd /tmp

rm -rf node.latest >/dev/null 2>&1
run wget http://nodejs.org/dist/latest/SHASUMS.txt -O /tmp/node.latest >/dev/null 2>&1

if [[ "$(uname -i)" == "x86_64" ]]; then
  LATESTNODE=$(grep linux-x64 /tmp/node.latest | cut -sd ' ' -f 3)
else
  LATESTNODE=$(grep linux-x86 /tmp/node.latest | cut -sd ' ' -f 3)
fi

VERSION=$(echo $LATESTNODE | cut -sd '.' -f 1,2,3 | cut -sd'-' -f 2)
REPO="https://github.com/joyent/node.git"
UPTODATE=1

# Check for an existing version of node.
if which node >/dev/null 2>&1; then
  CURRENT=$(node -v)
  if [[ "$VERSION" == "$CURRENT" ]]; then
    UPTODATE=0
    log "Node already up to date! Current version: node $GREEN$CURRENT$NOCLR"
  fi
fi

# Run update / install logic.
if [[ $UPTODATE -eq 0 ]]; then
  log "Skipping update process"
else
  NEEDCLONE=0

  # Use an existing clone if it's available.
  if ls node >/dev/null 2>&1; then
    log "Using existing repository"
    cd node

    # Check if we can pull.
    if run git pull; then
      log "Updated source files via git pull"
      NEEDCLONE=1
    fi

    cd ..
  fi

  if [[ $NEEDCLONE -eq 0 ]]; then
    rm -rf node >/dev/null 2>&1
    log "Pulling from git repo"
    run git clone $REPO
  fi

  cd node

  log "Running installation"

  # Checkout to our specific version.
  run git checkout $VERSION

  # Configure seems not to find libssl by default so we give it an explicit pointer.
  # Optionally: you can isolate node by adding --prefix=/opt/node
  run ./configure --openssl-libpath=/usr/lib/ssl

  run make
  run make install
fi

cd $OPAD

alert update-manager "Finished Node.js" $(node -v)
loginfo "Installed version: node $GREEN$(node -v)$NOCLR"
log "Finished Node.js"
